{"version":3,"sources":["Launch/Launch.js","Launch/LaunchList.js","Launch/LaunchWrapper.js","App.js","theme.js","index.js"],"names":["Launch","index","launch","TableRow","key","TableCell","component","scope","mission_name","align","launch_year","Checkbox","checked","upcoming","launch_success","LAUNCHES","gql","useStyles","makeStyles","table","minWidth","LaunchList","props","classes","launches","launchList","forEach","push","TableContainer","Paper","Table","className","aria-label","TableHead","TableBody","LaunchListQuery","useQuery","loading","error","data","console","LaunchWrapper","Copyright","Typography","variant","color","Date","getFullYear","Link","href","App","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","Container","maxWidth","Box","my","gutterBottom","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"+TAmBeA,EAdA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAEvB,OACI,kBAACC,EAAA,EAAD,CAAUC,IAAKH,GACb,kBAACI,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,OAC7BL,EAAOM,cAEV,kBAACH,EAAA,EAAD,CAAWI,MAAM,SAASP,EAAOQ,aACjC,kBAACL,EAAA,EAAD,CAAWI,MAAM,SAAQ,kBAACE,EAAA,EAAD,CAAUC,QAASV,EAAOW,YACnD,kBAACR,EAAA,EAAD,CAAWI,MAAM,SAAQ,kBAACE,EAAA,EAAD,CAAUC,QAASV,EAAOY,oB,+NCD3D,IAAMC,EAAWC,cAAH,KAYRC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIRC,EAAa,SAAAC,GACjB,IAAMC,EAAUN,IAERO,EAAaF,EAAbE,SACFC,EAAa,GAInB,OAHAD,EAASE,SAAQ,SAACxB,EAAQD,GACxBwB,EAAWE,KAAK,kBAAC,EAAD,CAAQvB,IAAKH,EAAOA,MAAOA,EAAOC,OAAQA,QAG1D,kBAAC0B,EAAA,EAAD,CAAgBtB,UAAWuB,KACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWR,EAAQJ,MAAOa,aAAW,gBAC1C,kBAACC,EAAA,EAAD,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,CAAWI,MAAM,SAAjB,QACA,kBAACJ,EAAA,EAAD,CAAWI,MAAM,SAAjB,oBACA,kBAACJ,EAAA,EAAD,CAAWI,MAAM,SAAjB,qBAGJ,kBAACyB,EAAA,EAAD,KACGT,MAoBIU,EAZS,WAAO,IAAD,EACKC,mBAASrB,GAAlCsB,EADoB,EACpBA,QAASC,EADW,EACXA,MAAOC,EADI,EACJA,KAExB,OAAIF,EACK,2CAELC,GACFE,QAAQF,MAAMA,GACP,wCAEF,kBAAC,EAAD,CAAYd,SAAUe,EAAKf,YCzDrBiB,EARO,WACpB,OACE,yBAAKV,UAAU,iBACb,kBAAC,EAAD,Q,+QCYiBf,cAAH,KAyBpB,SAAS0B,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBpC,MAAM,UACrD,mBACA,IAAIqC,MAAOC,cACX,IACD,kBAACC,EAAA,EAAD,CAAMH,MAAM,UAAUI,KAAK,yBAA3B,6CAEQ,IACP,KAKQ,SAASC,IACtB,IAAMC,EAhDC,IAAIC,eAAa,CACpBC,KAAM,IAAIC,WAAS,CACnBC,IAAK,qCAELC,MAAO,IAAIC,kBA8Cf,OACE,kBAAC,iBAAD,CAAgBN,OAAQA,GACxB,kBAACO,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKtC,UAAU,KAAKwD,cAAY,GAApD,mBAGA,kBAAC,EAAD,MACA,kBAACpB,EAAD,S,oBChDOqB,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAER7B,MAAO,CACL6B,KAAME,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCTfC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAeZ,MAAOA,GAEpB,kBAACa,EAAA,EAAD,MACA,kBAAC1B,EAAD,OAEF2B,SAASC,cAAc,W","file":"static/js/main.ef9debb3.chunk.js","sourcesContent":["import React from \"react\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Launch = ({ index, launch }) => {\n  debugger;\n  return (\n      <TableRow key={index}>\n        <TableCell component=\"th\" scope=\"row\">\n          {launch.mission_name}\n        </TableCell>\n        <TableCell align=\"right\">{launch.launch_year}</TableCell>\n        <TableCell align=\"right\"><Checkbox checked={launch.upcoming}/></TableCell>\n        <TableCell align=\"right\"><Checkbox checked={launch.launch_success}/></TableCell>\n      </TableRow>\n  );\n};\n\nexport default Launch;\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Launch from \"./Launch\";\n\nconst LAUNCHES = gql`\nquery launches {\n  launches(sort: \"launch_year\") {\n      id\n      mission_name\n      upcoming\n      launch_year\n      launch_success\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 550,\n  },\n});\n\nconst LaunchList = props => {\n  const classes = useStyles();\n\n  const { launches } = props;\n  const launchList = [];\n  launches.forEach((launch, index) => {\n    launchList.push(<Launch key={index} index={index} launch={launch} />);\n  });\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Mission name</TableCell>\n            <TableCell align=\"right\">Year</TableCell>\n            <TableCell align=\"right\">Upcoming launch?</TableCell>\n            <TableCell align=\"right\">Launch success?</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {launchList}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\n\nconst LaunchListQuery = () => {\n  const { loading, error, data } = useQuery(LAUNCHES);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    console.error(error);\n    return <div>Error!</div>;\n  }\n  return <LaunchList launches={data.launches} />;\n};\nexport default LaunchListQuery;\nexport { LAUNCHES };\n","import React from \"react\";\n\nimport LaunchList from \"./LaunchList\";\n\nconst LaunchWrapper = () => {\n  return (\n    <div className=\"launchWrapper\">\n      <LaunchList />\n    </div>\n  );\n};\n\nexport default LaunchWrapper;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n//import Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport LaunchWrapper from \"./Launch/LaunchWrapper\";\n\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink, useQuery, gql } from '@apollo/client';\n\nconst createApolloClient = () => {\n  return new ApolloClient({\n      link: new HttpLink({\n      uri: 'https://api.spacex.land/graphql/',\n      }),\n      cache: new InMemoryCache(),\n    });\n  };\n  \n  const GET_LAUNCHES = gql`\n      query getLaunches {\n        launches(order: \"launch_year\") {\n          id\n          mission_name\n          upcoming\n          launch_year\n          launch_success\n          }\n      }\n  `;\n  \n  const LaunchesQuery = () => {\n    const { loading, error, data } = useQuery(GET_LAUNCHES);\n    \n      if (loading) {\n        return <div>Loading...</div>;\n      }\n      if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n      }\n      return <LaunchesQuery launches={data.launches} />;\n    };\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      {new Date().getFullYear()}\n      {' '}\n      <Link color=\"inherit\" href=\"https://assignar.com/\">\n        Anthony Joseph ðŸ‘· for Assignar!\n      </Link>{' '}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function App() {\n  const client = createApolloClient();\n\n  return (\n    <ApolloProvider client={client}>\n    <Container maxWidth=\"sm\">\n      <Box my={5}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          SpaceX Launches\n        </Typography>\n        <LaunchWrapper />\n        <Copyright />\n      </Box>\n    </Container>\n    </ApolloProvider>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}