{"version":3,"sources":["table.js","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","BasicTable","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","gql","Copyright","Typography","variant","color","Link","href","Date","getFullYear","App","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","Container","maxWidth","Box","my","gutterBottom","Button","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"uTAYMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAId,SAASC,EAAWC,EAAMC,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAEJ,OAAMC,WAAUC,MAAKC,QAAOC,WAGvC,IAAMC,EAAO,CACXN,EAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,EAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/CA,EAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,EAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,EAAW,cAAe,IAAK,GAAM,GAAI,MAG5B,SAASO,IACtB,IAAMC,EAAUZ,IAEhB,OACE,kBAACa,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQV,MAAOgB,aAAW,gBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,+BACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,gBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBAGJ,kBAACC,EAAA,EAAD,KACGb,EAAKc,KAAI,SAACC,GAAD,OACR,kBAACL,EAAA,EAAD,CAAUM,IAAKD,EAAIpB,MACjB,kBAACgB,EAAA,EAAD,CAAWP,UAAU,KAAKa,MAAM,OAC7BF,EAAIpB,MAEP,kBAACgB,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAInB,UAC9B,kBAACe,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIlB,KAC9B,kBAACc,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIjB,OAC9B,kBAACa,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIhB,gB,kRCpCrBmB,cAAH,KAwBpB,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBV,MAAM,UACrD,kBACD,kBAACW,EAAA,EAAD,CAAMD,MAAM,UAAUE,KAAK,yBAA3B,0BAEQ,KACP,IAAIC,MAAOC,cACX,KAKQ,SAASC,IACtB,IAAMC,EA9CC,IAAIC,eAAa,CACpBC,KAAM,IAAIC,WAAS,CACnBC,IAAK,qCAELC,MAAO,IAAIC,kBA6Cf,OACE,kBAAC,iBAAD,CAAgBN,OAAQA,GACxB,kBAACO,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKjB,UAAU,KAAKmC,cAAY,GAApD,oCAGA,kBAACC,EAAA,EAAD,CAAQnB,QAAQ,aAAhB,WACA,kBAACpB,EAAD,MACA,kBAACkB,EAAD,S,oBC/COsB,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCTfC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAeb,MAAOA,GAEpB,kBAACc,EAAA,EAAD,MACA,kBAAC5B,EAAD,OAEF6B,SAASC,cAAc,W","file":"static/js/main.7cd3913a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from '@apollo/client';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function BasicTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport BasicTable from './table';\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink, useQuery, gql } from '@apollo/client';\n\nconst createApolloClient = () => {\n  return new ApolloClient({\n      link: new HttpLink({\n      uri: 'https://api.spacex.land/graphql/',\n      }),\n      cache: new InMemoryCache(),\n    });\n  };\n  \n  const GET_LAUNCHES = gql`\n      query getLaunches {\n          launches(limit: 10) {\n          id\n          mission_name\n          upcoming\n          launch_year\n          launch_success\n          }\n      }\n  `;\n  \n  const LaunchesQuery = () => {\n      const { loading, error, data } = useQuery(GET_LAUNCHES);\n    \n      if (loading) {\n        return <div>Loading...</div>;\n      }\n      if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n      }\n      return <LaunchesQuery launches={data.launches} />;\n    };\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://assignar.com/\">\n        Assignar ðŸŽ‰!\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function App() {\n  const client = createApolloClient();\n  debugger;\n\n  return (\n    <ApolloProvider client={client}>\n    <Container maxWidth=\"sm\">\n      <Box my={5}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Create React App v4-beta example\n        </Typography>\n        <Button variant=\"contained\">Default</Button>\n        <BasicTable />\n        <Copyright />\n      </Box>\n    </Container>\n    </ApolloProvider>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}